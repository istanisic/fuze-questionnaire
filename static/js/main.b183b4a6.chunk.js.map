{"version":3,"sources":["logo.svg","components/Option/Option.js","components/Question/Question.js","components/QuestionList/QuestionList.js","components/NewQuestion/NewQuestion.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Option","react_default","a","createElement","className","type","id","this","props","option","name","value","for","React","Component","Question","label","options","map","components_Option_Option","QuestionList","questions","question","components_Question_Question","NewQuestion","handleClick","e","preventDefault","document","getElementById","_this","onClick","split","rows","placeholder","href","class","aria-hidden","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","newQuestions","slice","push","setState","components_QuestionList_QuestionList","components_NewQuestion_NewQuestion","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0IAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sPCezBC,kNATX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,QAAQC,GAAIC,KAAKC,MAAMC,OAAQC,KAAMH,KAAKC,MAAMC,OAAQE,MAAOJ,KAAKC,MAAMC,SACtFR,EAAAC,EAAAC,cAAA,SAAOS,IAAKL,KAAKC,MAAMC,QAASF,KAAKC,MAAMC,gBAN9BI,IAAMC,YCmBZC,mLAfX,OACEd,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAII,KAAKC,MAAMQ,OACff,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEXG,KAAKC,MAAMS,QAAQC,IAAI,SAAAT,GACrB,OAAOR,EAAAC,EAAAC,cAACgB,EAAD,CAAQV,OAAQA,eATZI,IAAMC,WCcdM,mLAZX,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXG,KAAKC,MAAMa,UAAUH,IAAI,SAAAI,GACvB,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,CAAUP,MAAOM,EAASN,MAAOC,QAASK,EAASL,oBAN3CJ,IAAMC,WCwBlBU,oNAtBbC,YAAc,SAACC,GACbA,EAAEC,iBACF,IAAIX,EAAQY,SAASC,eAAe,SAASlB,MACzCM,EAAUW,SAASC,eAAe,WAAWlB,MACjDmB,EAAKtB,MAAMuB,QAAQf,EAAOC,EAAQe,MAAM,gFAIxC,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,YAAU8B,KAAK,IAAI3B,GAAG,QAAQD,KAAK,OAAO6B,YAAY,iDACtDjC,EAAAC,EAAAC,cAAA,YAAU8B,KAAK,IAAI3B,GAAG,UAAUD,KAAK,OAAO6B,YAAY,mEACxDjC,EAAAC,EAAAC,cAAA,KAAGgC,KAAK,IAAIC,MAAM,mCAAmCL,QAASxB,KAAKkB,aACjExB,EAAAC,EAAAC,cAAA,QAAMiC,MAAM,6BAA6BC,cAAY,SACrDpC,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,+BAjBUU,IAAMC,YCmCjBwB,cAhCb,SAAAA,EAAY9B,GAAO,IAAAsB,EAAA,OAAAS,OAAAC,EAAA,EAAAD,CAAAhC,KAAA+B,IACjBR,EAAAS,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAApC,KAAMC,KACDoC,MAAQ,CACXvB,UAAW,CAAC,CACVL,MAAO,+CACPC,QAAS,CAAC,MAAO,OAAQ,aAAc,WACtC,CACDD,MAAO,4CACPC,QAAS,CAAC,UAAW,SAAU,QAAS,UAG5Ca,EAAKL,YAAcK,EAAKL,YAAYoB,KAAjBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAT,KAXFA,2EAcNd,EAAOC,GAClB,IAAM8B,EAAexC,KAAKqC,MAAMvB,UAAU2B,QAC1CD,EAAaE,KAAK,CAACjC,MAAOA,EAAOC,QAASA,IAC1CV,KAAK2C,SAAS,CACZ7B,UAAW0B,qCAKb,OACE9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgD,EAAD,CAAc9B,UAAWd,KAAKqC,MAAMvB,YACpCpB,EAAAC,EAAAC,cAACiD,EAAD,CAAarB,QAASxB,KAAKkB,sBA3BjBX,aCMEuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,MAAShC,SAASC,eAAe,SD2H3C,kBAAmBgC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b183b4a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './Option.css';\n\nclass Option extends React.Component {\n\n  render() {\n    return (\n      <div className=\"Option\">\n        <input type=\"radio\" id={this.props.option} name={this.props.option} value={this.props.option} />\n        <label for={this.props.option}>{this.props.option}</label>\n      </div>\n    );\n  }\n}\n\nexport default Option;\n","import React from 'react';\nimport './Question.css';\nimport Option from '../Option/Option';\n\nclass Question extends React.Component {\n\n  render() {\n    return (\n      <div>\n      <p>{this.props.label}</p>\n      <div className=\"Question\">\n        {\n          this.props.options.map(option => {\n            return <Option option={option} />;\n          })\n        }\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Question;\n","import React from 'react';\nimport './QuestionList.css';\nimport Question from '../Question/Question';\n\nclass QuestionList extends React.Component {\n  render() {\n    return (\n      <div className=\"QuestionList\">\n        {\n          this.props.questions.map(question => {\n            return <Question label={question.label} options={question.options} />;\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default QuestionList;\n","import React from 'react';\nimport './NewQuestion.css';\n// import DeleteButton from '../DeleteButton/DeleteButton';\n\nclass NewQuestion extends React.Component {\n\n  handleClick = (e) => {\n    e.preventDefault();\n    let label = document.getElementById(\"label\").value;\n    let options = document.getElementById(\"options\").value;\n    this.props.onClick(label, options.split(', '));\n  }\n\n  render() {\n    return (\n      <div className=\"NewQuestion\">\n        <label>Add a new question:</label>\n        <textarea rows=\"2\" id=\"label\" type=\"text\" placeholder=\"What is your favourite programming language?\" />\n        <textarea rows=\"4\" id=\"options\" type=\"text\" placeholder=\"Enter your options separated by a comma. i.e Java, PHP, C, C++\" />\n        <a href=\"#\" class=\"btn btn-primary a-btn-slide-text\" onClick={this.handleClick}>\n          <span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n          <span><strong>Add</strong></span>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default NewQuestion;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport QuestionList from './components/QuestionList/QuestionList';\nimport NewQuestion from './components/NewQuestion/NewQuestion';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [{\n        label: \"What is your favourite programming language?\",\n        options: [\"C++\", \"Java\", \"Javascript\", \"Python\"],\n      }, {\n        label: \"What is your favourite front-end library?\",\n        options: [\"Anuglar\", \"jQuery\", \"React\", \"Vue\"],\n      }]\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick (label, options) {\n    const newQuestions = this.state.questions.slice();\n    newQuestions.push({label: label, options: options});\n    this.setState({\n      questions: newQuestions,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <QuestionList questions={this.state.questions} />\n        <NewQuestion onClick={this.handleClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}